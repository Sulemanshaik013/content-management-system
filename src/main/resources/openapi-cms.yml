openapi: 3.0.1
info:
  title: cms
  description: Content Management System
  version: '1.0'
servers:
  - url: http://localhost:8080/api/v1
    description: Generated server url
paths:
  /user/update/{userId}:
    put:
      tags:
        - user-controller
      operationId: updateUserProfile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
        - user-controller
      operationId: changeUserPassword
      parameters:
        - name: password
          in: query
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /comments/{commentId}:
    get:
      tags:
        - comment-controller
      operationId: getCommentById
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
    put:
      tags:
        - comment-controller
      operationId: updateComment
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
    delete:
      tags:
        - comment-controller
      operationId: deleteComment
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
  /categories/{categoryId}:
    get:
      tags:
        - category-controller
      operationId: getCategoryById
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
    put:
      tags:
        - category-controller
      operationId: updateCategory
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      tags:
        - category-controller
      operationId: deleteCategory
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
  /articles/{articleId}:
    get:
      tags:
        - article-controller
      operationId: getArticle
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Article'
    put:
      tags:
        - article-controller
      operationId: updateArticle
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Article'
    delete:
      tags:
        - article-controller
      operationId: deleteArticle
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Article'
  /user/register:
    post:
      tags:
        - user-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /comments:
    get:
      tags:
        - comment-controller
      operationId: getAllComments
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
    post:
      tags:
        - comment-controller
      operationId: createComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
  /categories:
    get:
      tags:
        - category-controller
      operationId: getAllCategories
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
        - category-controller
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
  /articles:
    get:
      tags:
        - article-controller
      operationId: getAllArticles
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
    post:
      tags:
        - article-controller
      operationId: createArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Article'
  /articles/{articleId}/unpublish:
    post:
      tags:
        - article-controller
      operationId: unpublishArticle
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /articles/{articleId}/publish:
    post:
      tags:
        - article-controller
      operationId: publishArticle
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /user/read:
    get:
      tags:
        - user-controller
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /user/read/{userId}:
    get:
      tags:
        - user-controller
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /user/login:
    get:
      tags:
        - user-controller
      operationId: loginUser
      parameters:
        - name: userName
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /comments/article/{articleId}:
    get:
      tags:
        - comment-controller
      operationId: getCommentsByArticle
      parameters:
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
  /articles/search:
    get:
      tags:
        - article-controller
      operationId: searchArticleByKeyword
      parameters:
        - name: keyword
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
  /articles/published:
    get:
      tags:
        - article-controller
      operationId: getPublishedArticles
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
  /articles/drafts:
    get:
      tags:
        - article-controller
      operationId: getdratedArticle
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
  /articles/category/{categoryId}:
    get:
      tags:
        - article-controller
      operationId: getArticlesByCategory
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
  /user/delete/{userId}:
    delete:
      tags:
        - user-controller
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    UserDto:
      type: object
      properties:
        userName:
          type: string
        email:
          type: string
        password:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        password:
          type: string
    CommentDto:
      type: object
      properties:
        articleId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        content:
          type: string
    Article:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        user:
          $ref: '#/components/schemas/User'
        publicationDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - PUBLISHED
            - DRAFTED
        category:
          $ref: '#/components/schemas/Category'
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        categoryName:
          type: string
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        article:
          $ref: '#/components/schemas/Article'
        user:
          $ref: '#/components/schemas/User'
        content:
          type: string
        timestamp:
          type: string
          format: date-time
    CategoryDto:
      type: object
      properties:
        name:
          type: string
    ArticleDto:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        userId:
          type: integer
          format: int64
        categoryid:
          type: integer
          format: int64
